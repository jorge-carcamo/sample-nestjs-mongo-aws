service: sample-nestjs-mongo-aws
app: sample-nestjs-mongo-aws
variablesResolutionMode: 20210326

plugins:
  - serverless-plugin-typescript
  - serverless-offline

package:
  patterns:
    - node_moules/**
    - src/***
    - rds-combined-ca-bundle.pem

provider:
  name: aws
  runtime: nodejs14.x
  region: ${env:VAR_AWS_REGION, 'us-east-1'}
  memorySize: 512
  timeout: 300
  environment:
    VAR_AWS_REGION: ${env:VAR_AWS_REGION, 'us-east-1'}
    VAR_ARN_SECRET_MANAGER: ${env:VAR_SECRET_NAME, '*'}
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - "kms:Decrypt"
          Resource:
            Fn::Sub: ${env:VAR_KEY_KMS, '*'}
        - Effect: "Allow"
          Action:
            - "secretsmanager:GetSecretValue"
          Resource:
            Fn::Sub: ${env:VAR_SECRET_NAME, '*'}
        - Effect: "Allow"
          Action:
            - "secretsmanager:GetSecretValue"
            - "ec2:DescribeNetworkInterfaces"
            - "ec2:CreateNetworkInterface"
            - "ec2:DeleteNetworkInterface"
            - "ec2:DescribeInstances"
            - "ec2:AttachNetworkInterface"
          Resource: "*"

functions:
  main:
    handler: src/lambda.handler
    vpc:
      securityGroupIds:
        - ${env:VAR_SG, '*'}
      subnetIds:
        - ${env:VAR_SUBNET1, '*'}
        - ${env:VAR_SUBNET2, '*'}
    events:
      - http:
          method: any
          path: /{any+}
          authorizer:
            arn: ${env:VAR_COGNITO, '*'}
            identitySource: method.request.header.x-api-token
